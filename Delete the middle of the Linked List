NODE deleteMid(struct Node* head)
{
                                              // Base cases
    if (head == NULL && head->next == NULL)
    {
        return NULL;
    }
   NODE  cur = head;
 
    // Find the count of nodes
    int count = countOfNodes(head);
 
    // Find the middle node
    int mid = count / 2;
 
    // Delete the middle node
    while (mid-- > 1) {
        head = head->link;
    }
 
    // Delete the middle node
    head->link = head->link->link;
 
    return cur;
}


//another approach

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* sptr = head;
        ListNode* prev = head;
        ListNode* fptr = head;
        while(fptr!=NULL && fptr -> next!= NULL){
            prev = sptr;
            sptr = sptr -> next;
            fptr = fptr -> next -> next;
        }
        prev->next=sptr->next;
        
        
          return head;
}
   
  
